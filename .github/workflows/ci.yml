name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get update && sudo apt-get install -y cmake make g++ clang

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: |
        cmake -B ${{ steps.strings.outputs.build-output-dir }} \
              -DCMAKE_CXX_COMPILER=g++ \
              -DCMAKE_C_COMPILER=gcc \
              -DCMAKE_BUILD_TYPE=Release \
              -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config Release

    - name: Compile and Test Grep Implementation
      run: |
        chmod +x ./grep.sh
        ./grep.sh -E "hello" <<< "hello"  # Should return 0
        if [ $? -ne 0 ]; echo "Test #0 failed"; then exit 1; fi

        ./grep.sh -E "world" <<< "hello"  # Should return 1
        if [ $? -ne 1 ]; echo "Test #1 failed"; then exit 1; fi

        ./grep.sh -E "\d\d\d\d" <<< "2023"  # Should return 0
        if [ $? -ne 0 ]; echo "Test #2 failed"; then exit 1; fi

        ./grep.sh -E "\d\d\d\d" <<< "abcd"  # Should return 1
        if [ $? -ne 1 ]; echo "Test #3 failed"; then exit 1; fi

        ./grep.sh -E "[ah]" <<< "hello"  # Should return 0
        if [ $? -ne 0 ]; echo "Test #4 failed";; then exit 1; fi

        ./grep.sh -E "[^a-z]" <<< "1234"  # Should return 0
        if [ $? -ne 0 ]; echo "Test #5 failed"; then exit 1; fi

        ./grep.sh -E "^hello" <<< "hello world"  # Should return 0
        if [ $? -ne 0 ]; echo "Test #6 failed"; then exit 1; fi

        ./grep.sh -E "world$" <<< "hello world"  # Should return 0
        if [ $? -ne 0 ]; echo "Test #7 failed"; then exit 1; fi

        ./grep.sh -E "o+" <<< "hellooo"  # Should return 0
        if [ $? -ne 0 ]; echo "Test #8 failed"; then exit 1; fi

        ./grep.sh -E "colo?r" <<< "color"  # Should return 0
        if [ $? -ne 0 ]; echo "Test #9 failed"; then exit 1; fi

        ./grep.sh -E "colo?r" <<< "colour"  # Should return 1
        if [ $? -ne 1 ]; echo "Test #10 failed"; then exit 1; fi

        ./grep.sh -E "d.g" <<< "dog"  # Should return 0
        if [ $? -ne 0 ]; echo "Test #11 failed"; then exit 1; fi

        ./grep.sh -E "(cat|dog)" <<< "cat"  # Should return 0
        if [ $? -ne 0 ]; echo "Test #12 failed"; then exit 1; fi

        echo "All tests passed!"

